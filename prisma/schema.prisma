generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model controls {
  controlID  Int      @id @default(autoincrement())
  userID     Int
  deviceID   Int?
  sensorID   Int?
  timeSwitch DateTime @db.DateTime(0)
  action     String   @db.VarChar(200)
  device     device?  @relation(fields: [deviceID], references: [deviceID], onDelete: Cascade, onUpdate: NoAction, map: "controls_ibfk_device")
  sensor     sensor?  @relation(fields: [sensorID], references: [sensorID], onDelete: Cascade, onUpdate: NoAction, map: "controls_ibfk_sensor")

@@index([controlID], map: "controlID")
}

model data {
  dataID   Int      @id @default(autoincrement())
  sensorID Int
  dataTime DateTime @db.DateTime(0)
  value    Float    @db.Float

  @@index([sensorID], map: "sensorID")
}

model device {
  deviceID   Int           @id @default(autoincrement())
  deviceName String        @db.VarChar(50)
  quantity   Int?
  status     device_status
  led_light  led_light?
  pump       pump?

  controls controls[]
}

model led_light {
  lightID Int             @id
  state   led_light_state
  device  device          @relation(fields: [lightID], references: [deviceID], onDelete: Cascade, onUpdate: NoAction, map: "led_light_ibfk_1")
}

model pump {
  pumpID    Int        @id
  autoLevel Boolean
  schedule  String?    @db.VarChar(255)
  state     pump_state
  device    device     @relation(fields: [pumpID], references: [deviceID], onDelete: Cascade, onUpdate: NoAction, map: "pump_ibfk_1")
}

model sensor {
  sensorID       Int           @id @default(autoincrement())
  sensorName     String        @db.VarChar(50)
  type           String?       @db.VarChar(50)
  quantity       Int?
  alertThreshold Float?        @db.Float
  status         sensor_status
  controls       controls[]
}

model user {
  userID    Int     @id @default(autoincrement())
  userName  String  @unique(map: "userName") @db.VarChar(50)
  password  String  @db.VarChar(255)
  firstName String? @db.VarChar(50)
  lastName  String? @db.VarChar(50)
  phoneNum  String? @unique(map: "phoneNum") @db.VarChar(15)
  email     String? @unique(map: "email") @db.VarChar(100)
}

model warning {
  warningID   Int      @id @default(autoincrement())
  sensorID    Int
  message     String   @db.Text
  timeWarning DateTime @db.DateTime(0)

  @@index([sensorID], map: "sensorID")
}

model warning_user {
  warningID Int
  userID    Int

  @@id([warningID, userID])
  @@index([userID], map: "userID")
}

enum led_light_state {
  on
  off
}

enum device_status {
  able
  disable
}

enum pump_state {
  on
  off
  auto
}

enum sensor_status {
  able
  disable
}
